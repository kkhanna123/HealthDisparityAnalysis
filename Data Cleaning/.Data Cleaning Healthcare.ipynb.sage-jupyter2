{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-1e1f2096-aca9-453c-94e9-e8be03a900ef.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"markdown","id":"74b4a4","input":"Renaming all of the columns for clarity based on the documentation... \\(Bad mental health qualifies as more than 14 days at a time; rest of names are self explanatory.\\)\n","pos":5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"796031","input":"Looking at the column headers and referencing the documentation, we will keep state, county, and tract as identifiers, and take the Crude Prevalence \\(\\# of cases/total number in population\\).\n","pos":0.5,"state":"done","type":"cell"}
{"end":1657934556276,"exec_count":4,"id":"728923","input":"import pandas as pd\nimport sklearn\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np","kernel":"python3","pos":0,"start":1657934554590,"state":"done","type":"cell"}
{"end":1657935278661,"exec_count":10,"id":"c365b9","input":"Healthcare_df = pd.read_csv('../CensusData/HealthcareTractData.csv')\nHealthcare_df.head()","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>StateAbbr</th>\n      <th>StateDesc</th>\n      <th>CountyName</th>\n      <th>CountyFIPS</th>\n      <th>TractFIPS</th>\n      <th>TotalPopulation</th>\n      <th>ACCESS2_CrudePrev</th>\n      <th>ACCESS2_Crude95CI</th>\n      <th>ARTHRITIS_CrudePrev</th>\n      <th>ARTHRITIS_Crude95CI</th>\n      <th>...</th>\n      <th>OBESITY_Crude95CI</th>\n      <th>PHLTH_CrudePrev</th>\n      <th>PHLTH_Crude95CI</th>\n      <th>SLEEP_CrudePrev</th>\n      <th>SLEEP_Crude95CI</th>\n      <th>STROKE_CrudePrev</th>\n      <th>STROKE_Crude95CI</th>\n      <th>TEETHLOST_CrudePrev</th>\n      <th>TEETHLOST_Crude95CI</th>\n      <th>Geolocation</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>AZ</td>\n      <td>Arizona</td>\n      <td>Maricopa</td>\n      <td>4013</td>\n      <td>4013422643</td>\n      <td>5789</td>\n      <td>11.9</td>\n      <td>(10.1, 14.0)</td>\n      <td>17.0</td>\n      <td>(16.1, 17.9)</td>\n      <td>...</td>\n      <td>(26.9, 29.7)</td>\n      <td>9.2</td>\n      <td>( 8.2, 10.2)</td>\n      <td>34.5</td>\n      <td>(33.0, 36.3)</td>\n      <td>1.8</td>\n      <td>( 1.6,  2.0)</td>\n      <td>8.0</td>\n      <td>( 5.2, 11.6)</td>\n      <td>POINT (-111.61853 33.35726769)</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CA</td>\n      <td>California</td>\n      <td>Sacramento</td>\n      <td>6067</td>\n      <td>6067007402</td>\n      <td>6180</td>\n      <td>15.4</td>\n      <td>(13.5, 17.3)</td>\n      <td>24.6</td>\n      <td>(23.8, 25.3)</td>\n      <td>...</td>\n      <td>(29.6, 31.4)</td>\n      <td>15.1</td>\n      <td>(14.2, 16.2)</td>\n      <td>35.7</td>\n      <td>(34.8, 36.7)</td>\n      <td>3.9</td>\n      <td>( 3.6,  4.3)</td>\n      <td>18.2</td>\n      <td>(13.7, 23.5)</td>\n      <td>POINT (-121.3791473 38.6869681)</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>Madison</td>\n      <td>1089</td>\n      <td>1089000201</td>\n      <td>760</td>\n      <td>25.4</td>\n      <td>(21.2, 30.1)</td>\n      <td>36.0</td>\n      <td>(34.6, 37.3)</td>\n      <td>...</td>\n      <td>(46.6, 49.7)</td>\n      <td>22.5</td>\n      <td>(20.4, 24.7)</td>\n      <td>50.3</td>\n      <td>(48.8, 51.3)</td>\n      <td>7.6</td>\n      <td>( 6.8,  8.6)</td>\n      <td>33.3</td>\n      <td>(24.1, 43.8)</td>\n      <td>POINT (-86.55005486 34.77465775)</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>Montgomery</td>\n      <td>1101</td>\n      <td>1101002202</td>\n      <td>1185</td>\n      <td>25.2</td>\n      <td>(21.2, 29.4)</td>\n      <td>36.1</td>\n      <td>(35.0, 37.3)</td>\n      <td>...</td>\n      <td>(45.3, 47.9)</td>\n      <td>20.7</td>\n      <td>(19.1, 22.7)</td>\n      <td>49.7</td>\n      <td>(48.3, 51.1)</td>\n      <td>7.2</td>\n      <td>( 6.4,  8.0)</td>\n      <td>34.0</td>\n      <td>(25.6, 42.0)</td>\n      <td>POINT (-86.30555503 32.31774882)</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>Butler</td>\n      <td>1013</td>\n      <td>1013952800</td>\n      <td>1394</td>\n      <td>14.3</td>\n      <td>(11.9, 17.1)</td>\n      <td>36.0</td>\n      <td>(34.5, 37.4)</td>\n      <td>...</td>\n      <td>(32.3, 35.2)</td>\n      <td>15.2</td>\n      <td>(13.5, 16.9)</td>\n      <td>35.7</td>\n      <td>(33.9, 37.5)</td>\n      <td>4.2</td>\n      <td>( 3.6,  4.8)</td>\n      <td>15.1</td>\n      <td>( 8.9, 22.9)</td>\n      <td>POINT (-86.62833756 31.83774723)</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 67 columns</p>\n</div>","text/plain":"  StateAbbr   StateDesc  CountyName  CountyFIPS   TractFIPS  TotalPopulation  \\\n0        AZ     Arizona    Maricopa        4013  4013422643             5789   \n1        CA  California  Sacramento        6067  6067007402             6180   \n2        AL     Alabama     Madison        1089  1089000201              760   \n3        AL     Alabama  Montgomery        1101  1101002202             1185   \n4        AL     Alabama      Butler        1013  1013952800             1394   \n\n   ACCESS2_CrudePrev ACCESS2_Crude95CI  ARTHRITIS_CrudePrev  \\\n0               11.9      (10.1, 14.0)                 17.0   \n1               15.4      (13.5, 17.3)                 24.6   \n2               25.4      (21.2, 30.1)                 36.0   \n3               25.2      (21.2, 29.4)                 36.1   \n4               14.3      (11.9, 17.1)                 36.0   \n\n  ARTHRITIS_Crude95CI  ...  OBESITY_Crude95CI PHLTH_CrudePrev  \\\n0        (16.1, 17.9)  ...       (26.9, 29.7)             9.2   \n1        (23.8, 25.3)  ...       (29.6, 31.4)            15.1   \n2        (34.6, 37.3)  ...       (46.6, 49.7)            22.5   \n3        (35.0, 37.3)  ...       (45.3, 47.9)            20.7   \n4        (34.5, 37.4)  ...       (32.3, 35.2)            15.2   \n\n   PHLTH_Crude95CI SLEEP_CrudePrev  SLEEP_Crude95CI STROKE_CrudePrev  \\\n0     ( 8.2, 10.2)            34.5     (33.0, 36.3)              1.8   \n1     (14.2, 16.2)            35.7     (34.8, 36.7)              3.9   \n2     (20.4, 24.7)            50.3     (48.8, 51.3)              7.6   \n3     (19.1, 22.7)            49.7     (48.3, 51.1)              7.2   \n4     (13.5, 16.9)            35.7     (33.9, 37.5)              4.2   \n\n   STROKE_Crude95CI TEETHLOST_CrudePrev  TEETHLOST_Crude95CI  \\\n0      ( 1.6,  2.0)                 8.0         ( 5.2, 11.6)   \n1      ( 3.6,  4.3)                18.2         (13.7, 23.5)   \n2      ( 6.8,  8.6)                33.3         (24.1, 43.8)   \n3      ( 6.4,  8.0)                34.0         (25.6, 42.0)   \n4      ( 3.6,  4.8)                15.1         ( 8.9, 22.9)   \n\n                        Geolocation  \n0    POINT (-111.61853 33.35726769)  \n1   POINT (-121.3791473 38.6869681)  \n2  POINT (-86.55005486 34.77465775)  \n3  POINT (-86.30555503 32.31774882)  \n4  POINT (-86.62833756 31.83774723)  \n\n[5 rows x 67 columns]"},"exec_count":10}},"pos":1,"start":1657935277642,"state":"done","type":"cell"}
{"end":1657935668490,"exec_count":22,"id":"190bef","input":"for col in Healthcare_df.columns:\n    if col[-4:].strip() == 'Prev':\n        newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n        \n    ","kernel":"python3","output":{"0":{"name":"stderr","text":"/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n"},"1":{"name":"stderr","text":"/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n"},"2":{"name":"stderr","text":"/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n/tmp/ipykernel_20609/4067700212.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  newHealthcare_df[col[:-10].strip()] = list(Healthcare_df[col]).copy()\n"}},"pos":3,"start":1657935667881,"state":"done","type":"cell"}
{"end":1657935672888,"exec_count":23,"id":"de3783","input":"newHealthcare_df.columns","kernel":"python3","output":{"0":{"data":{"text/plain":"Index(['StateAbbr', 'StateDesc', 'CountyName', 'CountyFIPS', 'TractFIPS',\n       'TotalPopulation', 'ACCESS2', 'ARTHRITIS', 'BINGE', 'BPHIGH', 'BPMED',\n       'CANCER', 'CASTHMA', 'CERVICAL', 'CHD', 'CHECKUP', 'CHOLSCREEN',\n       'COLON_SCREEN', 'COPD', 'COREM', 'COREW', 'CSMOKING', 'DENTAL',\n       'DEPRESSION', 'DIABETES', 'GHLTH', 'HIGHCHOL', 'KIDNEY', 'LPA',\n       'MAMMOUSE', 'MHLTH', 'OBESITY', 'PHLTH', 'SLEEP', 'STROKE',\n       'TEETHLOST'],\n      dtype='object')"},"exec_count":23}},"pos":4,"start":1657935672882,"state":"done","type":"cell"}
{"end":1657935702005,"exec_count":25,"id":"d2481f","input":"newHealthcare_df.head()","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>StateAbbr</th>\n      <th>StateDesc</th>\n      <th>CountyName</th>\n      <th>CountyFIPS</th>\n      <th>TractFIPS</th>\n      <th>TotalPopulation</th>\n      <th>ACCESS2</th>\n      <th>ARTHRITIS</th>\n      <th>BINGE</th>\n      <th>BPHIGH</th>\n      <th>...</th>\n      <th>HIGHCHOL</th>\n      <th>KIDNEY</th>\n      <th>LPA</th>\n      <th>MAMMOUSE</th>\n      <th>MHLTH</th>\n      <th>OBESITY</th>\n      <th>PHLTH</th>\n      <th>SLEEP</th>\n      <th>STROKE</th>\n      <th>TEETHLOST</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>AZ</td>\n      <td>Arizona</td>\n      <td>Maricopa</td>\n      <td>4013</td>\n      <td>4013422643</td>\n      <td>5789</td>\n      <td>11.9</td>\n      <td>17.0</td>\n      <td>19.9</td>\n      <td>23.7</td>\n      <td>...</td>\n      <td>27.4</td>\n      <td>2.1</td>\n      <td>18.1</td>\n      <td>73.8</td>\n      <td>13.9</td>\n      <td>28.3</td>\n      <td>9.2</td>\n      <td>34.5</td>\n      <td>1.8</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CA</td>\n      <td>California</td>\n      <td>Sacramento</td>\n      <td>6067</td>\n      <td>6067007402</td>\n      <td>6180</td>\n      <td>15.4</td>\n      <td>24.6</td>\n      <td>19.6</td>\n      <td>30.5</td>\n      <td>...</td>\n      <td>29.9</td>\n      <td>3.4</td>\n      <td>28.0</td>\n      <td>76.5</td>\n      <td>16.1</td>\n      <td>30.5</td>\n      <td>15.1</td>\n      <td>35.7</td>\n      <td>3.9</td>\n      <td>18.2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>Madison</td>\n      <td>1089</td>\n      <td>1089000201</td>\n      <td>760</td>\n      <td>25.4</td>\n      <td>36.0</td>\n      <td>10.5</td>\n      <td>53.7</td>\n      <td>...</td>\n      <td>32.5</td>\n      <td>5.5</td>\n      <td>48.2</td>\n      <td>84.1</td>\n      <td>22.8</td>\n      <td>48.2</td>\n      <td>22.5</td>\n      <td>50.3</td>\n      <td>7.6</td>\n      <td>33.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>Montgomery</td>\n      <td>1101</td>\n      <td>1101002202</td>\n      <td>1185</td>\n      <td>25.2</td>\n      <td>36.1</td>\n      <td>10.9</td>\n      <td>54.6</td>\n      <td>...</td>\n      <td>34.5</td>\n      <td>4.9</td>\n      <td>44.9</td>\n      <td>85.4</td>\n      <td>21.4</td>\n      <td>46.7</td>\n      <td>20.7</td>\n      <td>49.7</td>\n      <td>7.2</td>\n      <td>34.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>Butler</td>\n      <td>1013</td>\n      <td>1013952800</td>\n      <td>1394</td>\n      <td>14.3</td>\n      <td>36.0</td>\n      <td>13.4</td>\n      <td>43.0</td>\n      <td>...</td>\n      <td>38.8</td>\n      <td>3.3</td>\n      <td>33.1</td>\n      <td>77.5</td>\n      <td>15.6</td>\n      <td>33.8</td>\n      <td>15.2</td>\n      <td>35.7</td>\n      <td>4.2</td>\n      <td>15.1</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 36 columns</p>\n</div>","text/plain":"  StateAbbr   StateDesc  CountyName  CountyFIPS   TractFIPS  TotalPopulation  \\\n0        AZ     Arizona    Maricopa        4013  4013422643             5789   \n1        CA  California  Sacramento        6067  6067007402             6180   \n2        AL     Alabama     Madison        1089  1089000201              760   \n3        AL     Alabama  Montgomery        1101  1101002202             1185   \n4        AL     Alabama      Butler        1013  1013952800             1394   \n\n   ACCESS2  ARTHRITIS  BINGE  BPHIGH  ...  HIGHCHOL  KIDNEY   LPA  MAMMOUSE  \\\n0     11.9       17.0   19.9    23.7  ...      27.4     2.1  18.1      73.8   \n1     15.4       24.6   19.6    30.5  ...      29.9     3.4  28.0      76.5   \n2     25.4       36.0   10.5    53.7  ...      32.5     5.5  48.2      84.1   \n3     25.2       36.1   10.9    54.6  ...      34.5     4.9  44.9      85.4   \n4     14.3       36.0   13.4    43.0  ...      38.8     3.3  33.1      77.5   \n\n   MHLTH  OBESITY  PHLTH  SLEEP  STROKE  TEETHLOST  \n0   13.9     28.3    9.2   34.5     1.8        8.0  \n1   16.1     30.5   15.1   35.7     3.9       18.2  \n2   22.8     48.2   22.5   50.3     7.6       33.3  \n3   21.4     46.7   20.7   49.7     7.2       34.0  \n4   15.6     33.8   15.2   35.7     4.2       15.1  \n\n[5 rows x 36 columns]"},"exec_count":25}},"pos":4.5,"start":1657935701972,"state":"done","type":"cell"}
{"end":1657937603022,"exec_count":26,"id":"a1a00b","input":"newHealthcare_df.columns = ['stateInitials', 'stateName', 'countyName', 'countyID', 'tractID',\n       'population', 'noHealthInsurance%', 'arthritis%', 'bingeDrinking%', 'highBP%', 'medicineToLowerBP%',\n       'nonSkinCancer%', 'currentAsthma%', 'cervicalCancer%', 'coronaryHeartDisease%', 'routineCheckUp%', 'cholestorolScreening%',\n       'colonScreening%', 'chronicObstructivePulmonaryDisease%', 'menUpToDateOnVaccinesAndScreenings%', 'womenUpToDateOnVaccinesAndScreenings%', 'currentSmoking%', 'routineDentalCheckup%',\n       'depression%', 'diabetes%', 'fairOrGoodHealth%', 'highCholestorol%', 'chronicKidneyDisease%', 'noLeisurelyPhysicalActivity%',\n       'mammographyUseWomen%', 'badMentalHealth%', 'obesity%', 'badPhysicalHealth%', 'lessThan7HoursOfSleep%', 'stroke%',\n       'allTeethLost%']","kernel":"python3","pos":6,"start":1657937603016,"state":"done","type":"cell"}
{"end":1657938075544,"exec_count":28,"id":"f8c081","input":"newHealthcare_df.head()","kernel":"python3","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>stateInitials</th>\n      <th>stateName</th>\n      <th>countyName</th>\n      <th>countyID</th>\n      <th>tractID</th>\n      <th>population</th>\n      <th>noHealthInsurance%</th>\n      <th>arthritis%</th>\n      <th>bingeDrinking%</th>\n      <th>highBP%</th>\n      <th>...</th>\n      <th>highCholestorol%</th>\n      <th>chronicKidneyDisease%</th>\n      <th>noLeisurelyPhysicalActivity%</th>\n      <th>mammographyUseWomen%</th>\n      <th>badMentalHealth%</th>\n      <th>obesity%</th>\n      <th>badPhysicalHealth%</th>\n      <th>lessThan7HoursOfSleep%</th>\n      <th>stroke%</th>\n      <th>allTeethLost%</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>AZ</td>\n      <td>Arizona</td>\n      <td>Maricopa</td>\n      <td>4013</td>\n      <td>4013422643</td>\n      <td>5789</td>\n      <td>11.9</td>\n      <td>17.0</td>\n      <td>19.9</td>\n      <td>23.7</td>\n      <td>...</td>\n      <td>27.4</td>\n      <td>2.1</td>\n      <td>18.1</td>\n      <td>73.8</td>\n      <td>13.9</td>\n      <td>28.3</td>\n      <td>9.2</td>\n      <td>34.5</td>\n      <td>1.8</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CA</td>\n      <td>California</td>\n      <td>Sacramento</td>\n      <td>6067</td>\n      <td>6067007402</td>\n      <td>6180</td>\n      <td>15.4</td>\n      <td>24.6</td>\n      <td>19.6</td>\n      <td>30.5</td>\n      <td>...</td>\n      <td>29.9</td>\n      <td>3.4</td>\n      <td>28.0</td>\n      <td>76.5</td>\n      <td>16.1</td>\n      <td>30.5</td>\n      <td>15.1</td>\n      <td>35.7</td>\n      <td>3.9</td>\n      <td>18.2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>Madison</td>\n      <td>1089</td>\n      <td>1089000201</td>\n      <td>760</td>\n      <td>25.4</td>\n      <td>36.0</td>\n      <td>10.5</td>\n      <td>53.7</td>\n      <td>...</td>\n      <td>32.5</td>\n      <td>5.5</td>\n      <td>48.2</td>\n      <td>84.1</td>\n      <td>22.8</td>\n      <td>48.2</td>\n      <td>22.5</td>\n      <td>50.3</td>\n      <td>7.6</td>\n      <td>33.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>Montgomery</td>\n      <td>1101</td>\n      <td>1101002202</td>\n      <td>1185</td>\n      <td>25.2</td>\n      <td>36.1</td>\n      <td>10.9</td>\n      <td>54.6</td>\n      <td>...</td>\n      <td>34.5</td>\n      <td>4.9</td>\n      <td>44.9</td>\n      <td>85.4</td>\n      <td>21.4</td>\n      <td>46.7</td>\n      <td>20.7</td>\n      <td>49.7</td>\n      <td>7.2</td>\n      <td>34.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>Butler</td>\n      <td>1013</td>\n      <td>1013952800</td>\n      <td>1394</td>\n      <td>14.3</td>\n      <td>36.0</td>\n      <td>13.4</td>\n      <td>43.0</td>\n      <td>...</td>\n      <td>38.8</td>\n      <td>3.3</td>\n      <td>33.1</td>\n      <td>77.5</td>\n      <td>15.6</td>\n      <td>33.8</td>\n      <td>15.2</td>\n      <td>35.7</td>\n      <td>4.2</td>\n      <td>15.1</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 36 columns</p>\n</div>","text/plain":"  stateInitials   stateName  countyName  countyID     tractID  population  \\\n0            AZ     Arizona    Maricopa      4013  4013422643        5789   \n1            CA  California  Sacramento      6067  6067007402        6180   \n2            AL     Alabama     Madison      1089  1089000201         760   \n3            AL     Alabama  Montgomery      1101  1101002202        1185   \n4            AL     Alabama      Butler      1013  1013952800        1394   \n\n   noHealthInsurance%  arthritis%  bingeDrinking%  highBP%  ...  \\\n0                11.9        17.0            19.9     23.7  ...   \n1                15.4        24.6            19.6     30.5  ...   \n2                25.4        36.0            10.5     53.7  ...   \n3                25.2        36.1            10.9     54.6  ...   \n4                14.3        36.0            13.4     43.0  ...   \n\n   highCholestorol%  chronicKidneyDisease%  noLeisurelyPhysicalActivity%  \\\n0              27.4                    2.1                          18.1   \n1              29.9                    3.4                          28.0   \n2              32.5                    5.5                          48.2   \n3              34.5                    4.9                          44.9   \n4              38.8                    3.3                          33.1   \n\n   mammographyUseWomen%  badMentalHealth%  obesity%  badPhysicalHealth%  \\\n0                  73.8              13.9      28.3                 9.2   \n1                  76.5              16.1      30.5                15.1   \n2                  84.1              22.8      48.2                22.5   \n3                  85.4              21.4      46.7                20.7   \n4                  77.5              15.6      33.8                15.2   \n\n   lessThan7HoursOfSleep%  stroke%  allTeethLost%  \n0                    34.5      1.8            8.0  \n1                    35.7      3.9           18.2  \n2                    50.3      7.6           33.3  \n3                    49.7      7.2           34.0  \n4                    35.7      4.2           15.1  \n\n[5 rows x 36 columns]"},"exec_count":28}},"pos":7,"start":1657938075529,"state":"done","type":"cell"}
{"end":1657938085673,"exec_count":30,"id":"fb9c13","input":"newHealthcare_df.to_csv('../Clean Data/cleanHealthcareData.csv',sep=',')","kernel":"python3","pos":8,"start":1657938084405,"state":"done","type":"cell"}
{"exec_count":21,"id":"0e4016","input":"newHealthcare_df = Healthcare_df[['StateAbbr', 'StateDesc', 'CountyName', 'CountyFIPS', 'TractFIPS','TotalPopulation']]","kernel":"python3","pos":2,"state":"done","type":"cell"}
{"id":"d0cbaf","input":"","pos":9,"state":"done","type":"cell"}
{"id":0,"time":1657934834037,"type":"user"}
{"last_load":1657934399144,"type":"file"}